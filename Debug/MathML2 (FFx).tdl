MathType Output Translator 1.0: "MathML 2.0 (FFx)", "MathML 2.0 (FFx)"
run/plain/name/"plain" = "#";
char/0x0000/0xFFFF/"plain" = "<mtext mathtypevariant='plain'>&$#x(CharHex);</mtext>";
run/bold/name/"bold" = "#";
char/0x0000/0xFFFF/"bold" = "<mtext mathtypevariant='bold'>&$#x(CharHex);</mtext>";
run/italic/name/"italic" = "#";
char/0x0000/0xFFFF/"italic" = "<mtext mathtypevariant='italic'>&$#x(CharHex);</mtext>";
run/bold_italic/name/"bold_italic" = "#";
char/0x0000/0xFFFF/"bold_italic" = "<mtext mathtypevariant='bold_italic'>&$#x(CharHex);</mtext>";
run/text/name/"text" = "#";
char/0x0000/0xFFFF/"text" = "<mtext mathtypevariant='text'>&$#x(CharHex);</mtext>";
run/function/name/"function_style" = "#";
char/0x0000/0xFFFF/"function_style" = "<mtext mathtypevariant='function'>&$#x(CharHex);</mtext>";
run/variable/name/"variable" = "#";
char/0x0000/0xFFFF/"variable" = "<mtext mathtypevariant='variable'>&$#x(CharHex);</mtext>";
run/greek/name/"greek" = "#";
char/0x0000/0xFFFF/"greek" = "<mtext mathtypevariant='greek'>&$#x(CharHex);</mtext>";
run/lc_greek/name/"lc_greek" = "#";
char/0x0000/0xFFFF/"lc_greek" = "<mtext mathtypevariant='lc_greek'>&$#x(CharHex);</mtext>";
run/uc_greek/name/"uc_greek" = "#";
char/0x0000/0xFFFF/"uc_greek" = "<mtext mathtypevariant='uc_greek'>&$#x(CharHex);</mtext>";
run/symbol/name/"symbol" = "#";
char/0x0000/0xFFFF/"symbol" = "<mtext mathtypevariant='symbol'>&$#x(CharHex);</mtext>";
run/vector/name/"vector" = "#";
char/0x0000/0xFFFF/"vector" = "<mtext mathtypevariant='vector'>&$#x(CharHex);</mtext>";
run/number/name/"number_style" = "#";
char/0x0000/0xFFFF/"number_style" = "<mtext mathtypevariant='number'>&$#x(CharHex);</mtext>";
run/extra_math/name/"extra_math" = "#";
char/0x0000/0xFFFF/"extra_math" = "<mtext mathtypevariant='extra_math'>&$#x(CharHex);</mtext>";
run/user1style/name/"user1style" = "#";
char/0x0000/0xFFFF/"user1style" = "<mtext mathtypevariant='user1style'>&$#x(CharHex);</mtext>";
run/user2style/name/"user2style" = "#";
char/0x0000/0xFFFF/"user2style" = "<mtext mathtypevariant='user2style'>&$#x(CharHex);</mtext>";

// Copyright (c) 2001-2003 by Design Science, Inc.
// License: You are allowed to create your own translators based on the contents of this file
// solely for use with MathType. It is recommended that you change the filename, title, and description
// in the first line of this file so as to reflect your modifications and the change of author and purpose.
// Design Science, Inc. is not responsible for any damages caused by the use of this file or derived works.

// $Header: /MathType/Translators/MathML2 (m namespace).tdl 18    12/11/08 1:08p Eduardot $

// The MathML definitions are contained in the file MathML2base.tdl, included below.
// This file contains numeric entity references only. Although named entities are
// more human-readable, many software programs do not yet understand named entities.
// As a result, our default translator only generates numeric entities. If, for some
// reason, you need to generate named entities, please contact our support dept. at
// support@dessci.com and they will be able to help. 

vardelims = "()";
var/"ns" = "m:";
var/"MathMLNS" = "";

// variables for top level translation, used in MathML2base.tdl
var/"BeginMathDisplay" = "<(ns)math display='block'(MathMLNS)>";
var/"BeginMathInline" = "<(ns)math(MathMLNS)>";
var/"TransAndData" = "<(ns)semantics>$+$n#$n<(ns)annotation encoding='MathType-MTEF'>(EqnData)</(ns)annotation>$-$n</(ns)semantics>";
var/"EndMath" = "</(ns)math>";

include "MathML2base.tdl";

// characters that are not defined in the base file
char/0x2212/mathmode = "<(ns)mo>&$#x2212;</(ns)mo>";        

char/0xED10/mathmode = "<(ns)mo>&$#x2146;</(ns)mo>";                    // DifferentialD
char/0xED10/textmode = "&$#x2146;";							                  // DifferentialD
char/0xED11/mathmode = "<(ns)mo>&$#x2147;</(ns)mo>";                    // ExponentialE
char/0xED11/textmode = "&$#x2147;";							                  // ExponentialE
char/0xED12/mathmode = "<(ns)mo>&$#x2148;</(ns)mo>";                    // ImaginaryI
char/0xED12/textmode = "&$#x2148;";							                  // ImaginaryI
char/0xED13/mathmode = "<(ns)mo>&$#x2149;</(ns)mo>";                    // ImaginaryJ
char/0xED13/textmode = "&$#x2149;";							                  // ImaginaryJ
char/0xED16/mathmode = "<(ns)mo>&$#x2145;</(ns)mo>";                    // CapitalDifferentialD
char/0xED16/textmode = "&$#x2145;";							                  // CapitalDifferentialD
